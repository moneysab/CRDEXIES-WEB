name: Angular Frontend CI/CD
on:
  push:
    branches: [ "master" ]
env:
  DOCKER_IMAGE: ahgouneelhassane/moneysab-web
  CONTAINER_NAME: moneysab-web
  APP_PORT: 4200
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Clean up Node.js cache and dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install --legacy-peer-deps
      
      - name: Build project
        run: npm run build -- --configuration=production
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.frontend
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
      
      - name: Clean up build artifacts
        run: |
          rm -rf dist node_modules
          docker system prune -f
  
  deploy-frontend:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          echo "${{ secrets.EC2_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
      
      - name: Aggressive disk space cleanup
        run: |
          ssh -i ~/.ssh/deploy_key \
              ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_HOST }} \
              "# Check current disk usage
               echo 'Disk usage before cleanup:'
               df -h
               echo 'Docker system usage:'
               docker system df
               
               # Stop and remove old container
               docker stop ${{ env.CONTAINER_NAME }} || true && \
               docker rm ${{ env.CONTAINER_NAME }} || true && \
               
               # Remove ALL old images of this app (keep only what's needed)
               docker images ${{ env.DOCKER_IMAGE }} -q | xargs -r docker rmi -f || true && \
               
               # Remove all dangling/unused images
               docker image prune -a -f && \
               
               # Remove all stopped containers
               docker container prune -f && \
               
               # Remove all unused volumes
               docker volume prune -f && \
               
               # Remove all unused networks
               docker network prune -f && \
               
               # Complete Docker system cleanup
               docker system prune -a -f && \
               
               # Clean up system logs (optional - be careful)
               sudo journalctl --vacuum-time=1d || true && \
               
               # Clean up package manager cache
               sudo apt-get clean || true && \
               
               # Free up system cache
               sudo sync && sudo sysctl vm.drop_caches=3 || true && \
               
               # Final disk usage check
               echo 'Disk usage after cleanup:'
               df -h"
      
      - name: Pull new image and deploy
        run: |
          ssh -i ~/.ssh/deploy_key \
              ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_HOST }} \
              "# Pull new image
               docker pull ${{ env.DOCKER_IMAGE }}:${{ github.sha }} && \
               # Run new container
               docker run -d \
                 --name ${{ env.CONTAINER_NAME }} \
                 -p ${{ env.APP_PORT }}:80 \
                 --network moneysab-network \
                 --restart unless-stopped \
                 ${{ env.DOCKER_IMAGE }}:${{ github.sha }}"
      
      - name: Verify deployment
        run: |
          ssh -i ~/.ssh/deploy_key \
              ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_HOST }} \
              "docker ps | grep ${{ env.CONTAINER_NAME }} && \
               curl -sSf http://localhost:${{ env.APP_PORT }}"
      
      - name: Final cleanup
        run: |
          ssh -i ~/.ssh/deploy_key \
              ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_HOST }} \
              "# Remove any remaining dangling images
               docker image prune -f && \
               # Show current disk usage
               df -h && \
               # Show current memory usage
               free -h"
